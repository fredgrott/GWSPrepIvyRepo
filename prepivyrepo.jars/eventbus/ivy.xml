<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.    
-->
<ivy-module version="2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="http://ant.apache.org/ivy/schemas/ivy.xsd">
    <info
        organisation="de.greenrobot"
        module="eventbus"
        status="release"
        revision="2.1.0">
         <license name="Apache License" url="http://www.apache.org/licenses/LICENSE-2.0"/>
        <ivyauthor name="Fred Grott, GrottWorkShop" url="http://about.me/fredrott"/>
        <description homepage="https://github.com/greenrobot/EventBus">
       EventBus is an Android optimized publish/subscribe event bus. 
       A typical use case for Android apps is gluing Activities, Fragments, and background 
       threads together. Conventional wiring of those elements often introduces 
       complex and error-prone dependencies and life cycle issues. 
       With EventBus propagating listeners through 
       all participants (e.g. background service -> activity -> multiple fragments or 
       helper classes) becomes deprecated. EventBus decouples event senders and receivers 
       and thus simplifies communication between app components. Less code, better quality. 
       And you don't need to implement a single interface!
        </description>
	</info>
	<configurations>
        <conf name="runtime" description="runtime"/>
         <conf name="compile" description="for compiling"/>
         <conf name="aptfactory" description="for annotations, aop, etc"/>
         <conf name="javadoc" description="for javadoc"/>
         <conf name="sources" description="sources"/>
         <conf name="anttask" description="ant task library"/>
         <conf name="gradle" description="gradle plugins"/>
         <conf name="aspectjrt" description="aop"/>
         <conf name="aspectjweaver" description="asepctj weaver"/>
         <conf name="aspectjtools" description="aspectjtools"/>
         <conf name="ejc" description="eclipse java compiler"/>
         <conf name="doclet" description="doclet"/>
      </configurations>
    <publications >
           <artifact name="eventbus-2.1.0-beta-1" type="jar" ext="jar" conf="compile"/>
           <artifact name="eventbus-2.1.0-beta-1-javadoc" type="javadoc" ext="jar" conf="javadoc"/>
           <artifact name="eventbus-2.1.0-beta-1-sources" type="sources" ext="jar" conf="sources"/>
    </publications>
</ivy-module>
